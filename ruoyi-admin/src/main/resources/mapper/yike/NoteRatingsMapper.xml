<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.yike.mapper.NoteRatingsMapper">
    
    <resultMap type="NoteRatings" id="NoteRatingsResult">
        <result property="id"    column="id"    />
        <result property="noteId"    column="note_id"    />
        <result property="userId"    column="user_id"    />
        <result property="rating"    column="rating"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectNoteRatingsVo">
        select id, note_id, user_id, rating, created_at, updated_at from note_ratings
    </sql>

    <select id="selectNoteRatingsList" parameterType="NoteRatings" resultMap="NoteRatingsResult">
        <include refid="selectNoteRatingsVo"/>
        <where>  
            <if test="noteId != null "> and note_id = #{noteId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="rating != null "> and rating = #{rating}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectNoteRatingsById" parameterType="Long" resultMap="NoteRatingsResult">
        <include refid="selectNoteRatingsVo"/>
        where id = #{id}
    </select>

    <insert id="insertNoteRatings" parameterType="NoteRatings" useGeneratedKeys="true" keyProperty="id">
        insert into note_ratings
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="noteId != null">note_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="rating != null">rating,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="noteId != null">#{noteId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="rating != null">#{rating},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateNoteRatings" parameterType="NoteRatings">
        update note_ratings
        <trim prefix="SET" suffixOverrides=",">
            <if test="noteId != null">note_id = #{noteId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="rating != null">rating = #{rating},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteNoteRatingsById" parameterType="Long">
        delete from note_ratings where id = #{id}
    </delete>

    <delete id="deleteNoteRatingsByIds" parameterType="String">
        delete from note_ratings where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>