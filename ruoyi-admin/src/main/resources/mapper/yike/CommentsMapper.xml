<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.yike.mapper.CommentsMapper">
    
    <resultMap type="Comments" id="CommentsResult">
        <result property="id"    column="id"    />
        <result property="noteId"    column="note_id"    />
        <result property="userId"    column="user_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="content"    column="content"    />
        <result property="likes"    column="likes"    />
        <result property="createdAt"    column="created_at"    />
        <result property="status"    column="status"    />
    </resultMap>

    <sql id="selectCommentsVo">
        select id, note_id, user_id, parent_id, content, likes, created_at, status from comments
    </sql>

    <select id="selectCommentsList" parameterType="Comments" resultMap="CommentsResult">
        <include refid="selectCommentsVo"/>
        <where>  
            <if test="noteId != null "> and note_id = #{noteId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="content != null  and content != ''"> and content like concat('%', #{content}, '%')</if>
            <if test="likes != null "> and likes = #{likes}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectCommentsById" parameterType="Long" resultMap="CommentsResult">
        <include refid="selectCommentsVo"/>
        where id = #{id}
    </select>

    <insert id="insertComments" parameterType="Comments" useGeneratedKeys="true" keyProperty="id">
        insert into comments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="noteId != null">note_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="likes != null">likes,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="status != null">status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="noteId != null">#{noteId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="likes != null">#{likes},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="status != null">#{status},</if>
         </trim>
    </insert>

    <update id="updateComments" parameterType="Comments">
        update comments
        <trim prefix="SET" suffixOverrides=",">
            <if test="noteId != null">note_id = #{noteId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="likes != null">likes = #{likes},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="status != null">status = #{status},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCommentsById" parameterType="Long">
        delete from comments where id = #{id}
    </delete>

    <delete id="deleteCommentsByIds" parameterType="String">
        delete from comments where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>